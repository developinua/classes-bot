version: "3.8"

services:
  classes.api:
    container_name: classes.api
    image: classes.api
    build:
      context: .
      dockerfile: Classes.Infrastructure/api/Dockerfile
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 1G
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:4001;http://+:4000
      - ASPNETCORE_Kestrel__Certificates__Default__Path=Certificates/classes.pem
      - ASPNETCORE_Kestrel__Certificates__Default__KeyPath=Certificates/classes.key
      - TelegramBot__Url=${TelegramBot_Url}
      - TelegramBot__Name=${TelegramBot_Name}
      - TelegramBot__Token=${TelegramBot_Token}
      - ConnectionStrings__DefaultConnection=${ConnectionStrings_DefaultConnection}
    ports:
      - "4000:4000"
      - "4001:4001"
    networks:
      - classes_net

  classes.db:
    container_name: classes.db
    image: nbulyha/classes.db
    restart: unless-stopped
    build:
      context: Classes.Infrastructure/database
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 1G
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - my_db_data:/var/lib/postgresql/data
    networks:
      - classes_net

  classes.reverse_proxy:
    container_name: classes.reverse_proxy
    build:
      context: ./Classes.Infrastructure/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - classes_net

volumes:
  my_db_data:

networks:
  classes_net:
    driver: bridge
