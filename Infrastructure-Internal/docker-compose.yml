services:
  gateway:
    container_name: gateway
    image: nbulyha/classes-bot/gateway
    build:
      context: ../
      dockerfile: ./Infrastructure-Internal/gateway/Dockerfile
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - ASPNETCORE_HTTP_PORTS=${ASPNETCORE_HTTP_PORTS}
      - ASPNETCORE_HTTPS_PORTS=${ASPNETCORE_HTTPS_PORTS}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=${Certificate_Path}
      - ASPNETCORE_Kestrel__Certificates__Default__KeyPath=${Certificate_KeyPath}
      - TelegramBot__Url=${TelegramBot_Url}
      - TelegramBot__Name=${TelegramBot_Name}
      - TelegramBot__Token=${TelegramBot_Token}
      - ConnectionStrings__DefaultConnection=${ConnectionStrings_DefaultConnection}
    ports:
      - "4000:4000"
      - "4001:4001"
    networks:
      - classes_bot_net

  db:
    container_name: db
    image: nbulyha/classes-bot/db
    restart: unless-stopped
    build:
      context: ./database
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - my_db_data:/var/lib/postgresql/data
    networks:
      - classes_bot_net

  reverse_proxy:
    container_name: reverse_proxy
    image: nbulyha/classes-bot/reverse_proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./logs:/var/log/nginx
    networks:
      - classes_bot_net

volumes:
  my_db_data:

networks:
  classes_bot_net:
    driver: bridge
